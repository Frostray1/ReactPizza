{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/Learn_Frontend/reactPizza/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Categories from \"../components/Categories\";\nimport Sort from \"../components/Sort\";\nimport PizzaBlock from \"../components/PizzaBlock\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    searchValue\n  } = _ref;\n  const [items, setItems] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [categoryId, setCategoryId] = React.useState(0);\n  const [sortType, setSortType] = React.useState({\n    name: \"популярности\",\n    sortProperty: \"rating\"\n  });\n  const sortBy = sortType.sortProperty.replace('-', '');\n  const order = sortType.sortProperty.includes('-');\n  const category = categoryId > 0 ? `category=${categoryId}` : \"\"; // const search = searchValue ? `search=${searchValue}` : \"\";\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    fetch(`https://6332d070573c03ab0b5131fd.mockapi.io/items?${category}&sortBy=${sortBy}$&order=asc`).then(res => {\n      return res.json();\n    }).then(arr => {\n      setItems(arr);\n      setIsLoading(false);\n    });\n    window.scrollTo(0, 0);\n  }, [categoryId, sortType.searchValue]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 37\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onClickCategory: i => setCategoryId(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        value: sortType,\n        onChangeSort: i => setSortType(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"JWktv0PZsry/V6ZE3g4FappsQrQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Categories","Sort","PizzaBlock","Skeleton","Home","searchValue","items","setItems","useState","isLoading","setIsLoading","categoryId","setCategoryId","sortType","setSortType","name","sortProperty","sortBy","replace","order","includes","category","useEffect","fetch","then","res","json","arr","window","scrollTo","pizzas","map","obj","id","skeletons","Array","_","index","i"],"sources":["/Users/artem/Desktop/Learn_Frontend/reactPizza/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\n\nimport Categories from \"../components/Categories\";\nimport Sort from \"../components/Sort\";\nimport PizzaBlock from \"../components/PizzaBlock\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\n\nconst Home = ({ searchValue }) => {\n  const [items, setItems] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const [categoryId, setCategoryId] = React.useState(0);\n\n  const [sortType, setSortType] = React.useState({\n    name: \"популярности\",\n    sortProperty: \"rating\",\n  });\n\n  const sortBy = sortType.sortProperty.replace ('-','');\n  const order = sortType.sortProperty.includes('-')\n  const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n  // const search = searchValue ? `search=${searchValue}` : \"\";\n\n  React.useEffect(() => {\n    setIsLoading(true);\n\n    fetch(\n      `https://6332d070573c03ab0b5131fd.mockapi.io/items?${category}&sortBy=${sortBy}$&order=asc`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((arr) => {\n        setItems(arr);\n        setIsLoading(false);\n      });\n    window.scrollTo(0, 0);\n  }, [categoryId, sortType.searchValue]);\n\n  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);\n\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <Skeleton key={index} />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories\n          value={categoryId}\n          onClickCategory={(i) => setCategoryId(i)}\n        />\n        <Sort value={sortType} onChangeSort={(i) => setSortType(i)} />\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      <div className=\"content__items\">{isLoading ? skeletons : pizzas}</div>\n    </div>\n  );\n};\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}